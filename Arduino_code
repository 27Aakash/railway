HERE WRITE YOUR CODE
###
#include <SoftwareSerial.h>
SoftwareSerial sim900(7, 8); // RX, TX (Change pins if needed)

#define SENSOR1_PIN A0 // First 24V sensor
#define SENSOR2_PIN A1 // Second 24V sensor
#define SENSOR6_PIN A5 // 110 V Detector
#define RELAY 4
#define TOGGLE_SWITCH 2 // SPDT switch for maintenance mode

#define VREF 5 // Arduino reference voltage (5V)
#define SCALE_FACTOR 5.0
#define THRESHOLD_24V 22.0 // Minimum voltage threshold for 24V system

const String Alert = "31 Test Advance Alert"; // Alert prefix
const String COACH_NUMBER = "Coach No 1234"; // Coach number

void setup() {
    Serial.begin(9600); // Serial Monitor baud rate
    sim900.begin(9600); // SIM900 baud rate
    Serial.println("Initializing SIM900...");
    delay(1000);

    pinMode(RELAY, OUTPUT);
    pinMode(TOGGLE_SWITCH, INPUT_PULLUP); // Enable internal pull-up for SPDT switch
    digitalWrite(RELAY, HIGH); // Default OFF state for relay
}

void loop() {
    int switchState = digitalRead(TOGGLE_SWITCH); // Read toggle switch state

    if (switchState == LOW) {  
        Serial.println("Maintenance Mode - No Alerts Sent");
        delay(1000);
        return; // Exit loop early, do nothing
    }

    Serial.println("System Active - Monitoring Voltage");

    bool alertTriggered = false;
    String faultMessage = "";

    // Read voltage sensor values
    int sensorValue1 = analogRead(SENSOR1_PIN);
    int sensorValue2 = analogRead(SENSOR2_PIN);
    int sensorValue3 = digitalRead(SENSOR6_PIN);
    float voltage1 = (sensorValue1 / 1023.0) * VREF * SCALE_FACTOR;
    float voltage2 = (sensorValue2 / 1023.0) * VREF * SCALE_FACTOR;
    String State_110V = (sensorValue3 == LOW) ? "110 V Detected" : "110 V not Detected";

    Serial.print("Voltage 1: ");
    Serial.print(voltage1);
    Serial.print(" || Voltage 2: ");
    Serial.println(voltage2);
    Serial.println(State_110V);
    Serial.println("..................");

    // Check for 24V supply failures
    if (voltage1 < THRESHOLD_24V) {
        Serial.println("24V Supply Failure to FDS");
        faultMessage += "24 volt supply failure. Take action now!!\n";
        alertTriggered = true;
    }
    
    if (voltage2 < THRESHOLD_24V) {
        Serial.println("24V Battery Failure");
        faultMessage += "Backup Battery Failure. Take action now!!\n";
        alertTriggered = true;
    }

    if (sensorValue3 != LOW)
    {
        faultMessage += "110 V not Detected. Take action now!!\n";
        alertTriggered = true;  
    }
    
    // Relay Control Logic
    if (voltage1 < THRESHOLD_24V && voltage2 > THRESHOLD_24V) {
        Serial.println("Relay ON - Brake Coil Powered by Backup Battery");
        digitalWrite(RELAY, LOW); // Relay ON (Active)
        faultMessage += "Relay Turned ON - Brake Coil Powered by Battery\n";
        alertTriggered = true;
    } 
    else {
        Serial.println("Relay OFF - No Backup Battery Support");
        digitalWrite(RELAY, HIGH); // Relay OFF
    }

    // Prepare the SMS message
    String SMS_Alert = Alert + "\n" + COACH_NUMBER + "\n" + faultMessage;

    // Send SMS if any alert is triggered
    if (alertTriggered) {
        sendSMS("+919944014459", SMS_Alert);

    }

    delay(1000); // Delay for stability
}

void sendSMS(String number, String message) {
    sim900.println("AT+CMGF=1"); // Set SMS mode to text
    delay(1000);

    sim900.print("AT+CMGS=\"");
    sim900.print(number);
    sim900.println("\"");
    delay(1000);

    sim900.print(message);
    delay(1000);

    sim900.write(26); // Send Ctrl+Z to send message
    Serial.println("SMS Sent!");
}

